{
  "/patrons/{patron_id}/checkouts": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::PatronController#list_checkouts",
      "operationId": "listCheckoutsWithRenewabilityDI",
      "tags": ["patrons", "checkouts"],
      "parameters": [{
        "$ref": "openapi/parameters.json#/patron_id_pp"
      }, {
        "$ref": "openapi/parameters.json#/page"
      }, {
        "$ref": "openapi/parameters.json#/per_page"
      }, {
        "$ref": "openapi/parameters.json#/match"
      }, {
        "$ref": "openapi/parameters.json#/order_by"
      },{
        "name": "checked_in",
        "in": "query",
        "description": "By default, current checkouts are returned, when this is true then checked in checkouts are returned as result.",
        "type": "boolean"
      }],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "A list of checkouts"
        },
        "403": {
          "description": "Access forbidden",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        },
        "404": {
          "description": "Patron not found",
          "schema": { "$ref": "openapi/definitions.json#/error" }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "circulate": "circulate_remaining_permissions"
        }
      }
    }
  },
  "/patrons/validation": {
    "post": {
      "x-mojo-to": "Fi::KohaSuomi::DI::PatronController#validate_credentials",
      "operationId": "validatePatronCredentialsDI",
      "tags": ["patrons"],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "A password validation request",
          "schema": {
            "type": "object",
            "properties": {
              "cardnumber": {
                "description": "Card number for the patron",
                "type": "string"
              },
              "userid": {
                "description": "User login ID for the patron",
                "type": "string"
              },
              "password": {
                "description": "Password for the patron",
                "type": "string"
              }
            }
          }
        }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Patron information upon successful validation",
          "schema": {
            "type": "object"
          }
        },
        "400": {
          "description": "Bad parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Bad username/cardnumber and/or password",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "borrowers": "1",
          "circulate": "circulate_remaining_permissions"
        }
      }
    }
  },
  "/availability/biblios/{biblio_id}/articlerequest": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::AvailabilityController#biblio_article_request",
      "operationId": "articleRequestBiblioAvailabilityDI",
      "tags": ["items", "availability"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/biblio_id_pp" },
        { "$ref": "openapi/parameters.json#/patron_id_qp" },
        { "$ref": "openapi/parameters.json#/library_id_qp" },
        {
          "name": "limit_items",
          "in": "query",
          "description": "Check only first n available items.",
          "required": false,
          "type": "integer"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Article requet availability information for items of biblio.",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "biblio_id": {
                  "type": "integer",
                  "description": "Record internal identifier"
                },
                "availability": {
                  "type": "object",
                  "properties": {
                    "available": {
                      "type": "boolean",
                      "description": "Availability status"
                    },
                    "confirmations": {
                      "$ref": "openapi/definitions.json#/availability~1reason"
                    },
                    "notes": {
                      "$ref": "openapi/definitions.json#/availability~1reason"
                    },
                    "unavailability": {
                      "$ref": "openapi/definitions.json#/availability~1reason"
                    }
                  }
                },
                "items_availability": {
                  "description": "Availability of each item in this biblio",
                  "type": ["array", "null"],
                  "items": {
                    "$ref": "openapi/definitions.json#/availability~1item"
                  }
                }
              }              
            }
          }
        },
        "400": {
          "description": "Missing or invalid parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "catalogue": "1"
        }
      }
    }
  },
  "/availability/biblios/{biblio_id}/hold": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::AvailabilityController#biblio_hold",
      "operationId": "holdBiblioAvailabilityDI",
      "tags": ["items", "availability"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/biblio_id_pp" },
        { "$ref": "openapi/parameters.json#/patron_id_qp" },
        { "$ref": "openapi/parameters.json#/library_id_qp" },
        {
          "name": "query_pickup_locations",
          "in": "query",
          "description": "Return available pickup location(s) for each item. 1 = yes, 0 or no parameter = no.",
          "required": false,
          "type": "integer"
        },
        {
          "name": "limit_items",
          "in": "query",
          "description": "Check only first n available items.",
          "required": false,
          "type": "integer"
        }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Hold availability information for items of biblio.",
          "schema": {
            "type": "array",
            "items": {
              "allOf": [
                { "$ref": "openapi/definitions.json#/availability~1biblio" },
                {
                  "type": "object",
                  "properties": {
                    "hold_queue_length": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              ]
            }
          }
        },
        "400": {
          "description": "Missing or invalid parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "catalogue": "1"
        }
      }
    }
  },
  "/availability/biblios/{biblio_id}/search": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::AvailabilityController#biblio_search",
      "operationId": "searchBiblioAvailabilityDI",
      "tags": ["items", "availability"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/biblio_id_pp" }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Availability information in search context for items of biblio.",
          "schema": {
            "type": "array",
            "items": { "$ref": "openapi/definitions.json#/availability~1biblio" }
          }
        },
        "400": {
          "description": "Missing or invalid parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "catalogue": "1"
        }
      }
    }
  },
  "/availability/items/{item_id}/articlerequest": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::AvailabilityController#item_article_request",
      "operationId": "articleRequestItemAvailabilityDI",
      "tags": ["items", "availability"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/item_id_pp" },
        { "$ref": "openapi/parameters.json#/patron_id_qp" },
        { "$ref": "openapi/parameters.json#/library_id_qp" }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Article request availability information for specific item.",
          "schema": {
            "type": "array",
            "items": { "$ref": "openapi/definitions.json#/availability~1item" }
          }
        },
        "400": {
          "description": "Missing or invalid parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "catalogue": "1"
        }
      }
    }
  },
  "/availability/items/{item_id}/hold": {
    "get": {
      "x-mojo-to": "Fi::KohaSuomi::DI::AvailabilityController#item_hold",
      "operationId": "holdItemAvailabilityDI",
      "tags": ["items", "availability"],
      "parameters": [
        { "$ref": "openapi/parameters.json#/item_id_pp" },
        { "$ref": "openapi/parameters.json#/patron_id_qp" },
        { "$ref": "openapi/parameters.json#/library_id_qp" },
        {
          "name": "query_pickup_locations",
          "in": "query",
          "description": "Return available pickup location(s) for each item. 1 = yes, 0 or no parameter = no.",
          "required": false,
          "type": "integer"
        }
      ],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Hold availability information for specific item.",
          "schema": {
            "type": "array",
            "items": { "$ref": "openapi/definitions.json#/availability~1item" }
          }
        },
        "400": {
          "description": "Missing or invalid parameters",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "403": {
          "description": "Forbidden",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "openapi/definitions.json#/error"
          }
        }
      }
    },
    "x-koha-authorization": {
      "permissions": {
        "catalogue": "1"
      }
    }
  }
}
